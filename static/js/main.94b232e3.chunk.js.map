{"version":3,"sources":["models/Models.ts","components/avatar/Avatar.tsx","components/navigation/menu/NavigationMenu.tsx","components/navigation/Navigation.tsx","components/pages/bio/BioPage.tsx","components/gallery/Gallery.tsx","components/pages/gallery/GalleryPage.tsx","components/pages/map/MapPage.tsx","components/pages/tree/TreePage.tsx","components/pages/nomatch/NoMatchPage.tsx","components/pages/Page.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["EType","Avatar","props","className","style","backgroundPosition","position","backgroundImage","url","backgroundSize","size","widgetHandlers","BIO","ItemWidget","activeClassName","to","id","item","title","children","GALLERY","descriptionConverter","d","MAP","PHONE","href","description","replace","EMAIL","DATE","NavigationMenu","items","map","type","key","Navigation","withRouter","prop","match","params","userId","source","escapeHtml","Gallery","useState","currentImage","setCurrentImage","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","event","photo","index","photos","onClick","onClose","currentIndex","views","x","srcset","srcSet","caption","setPhotos","cb","urlParams","api_key","photoset_id","user_id","format","per_page","extras","Object","keys","reduce","acc","jsonp","name","err","data","photoset","src","url_l","width","parseInt","width_o","height","height_o","alt","url_m","width_m","url_c","width_c","width_l","url_h","width_h","sizes","loadPhotos","NoMatchPage","location","useLocation","pathname","Page","exact","path","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.94b232e3.chunk.js","sourcesContent":["export enum EType {\n    BIO,\n    GALLERY,\n    MAP,\n    PHONE,\n    EMAIL,\n    DATE\n}\n\nexport interface IItemMenu {\n    id: string,\n    type: EType,\n    title: string,\n    description?: string\n}\n\nexport interface INavigationProps {\n    id: string;\n    userId: string;\n}","import React from 'react';\n\nimport './Avatar.css';\n\ninterface IProps {\n    position: string;\n    url: string;\n    size: number;\n}\n\nconst Avatar = (props: IProps) => {\n    return (\n        <div\n            className=\"avatar\"\n            style={{\n                backgroundPosition: props.position,\n                backgroundImage: `url(${props.url})`,\n                backgroundSize: props.size\n            }}\n        />\n    );\n}\n\nexport default Avatar;","import React, { FunctionComponent } from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nimport { IItemMenu, EType } from '../../../models/Models';\n\nimport './NavigationMenu.css';\n\ninterface IProps {\n    id: number;\n    items: IItemMenu[];\n}\n\ninterface IWidgetProps {\n    id: number;\n    item: IItemMenu;\n}\n\ninterface IItem {\n    className: string;\n    ItemWidget: FunctionComponent<IWidgetProps>;\n    descriptionConverter?: (description: string) => string;\n\n}\n\nconst widgetHandlers: { [key in EType]: IItem } = {\n    [EType.BIO]: {\n        className: 'menu_logo__book',\n        ItemWidget: (props) => {\n            return <NavLink className=\"menu_wrapper link\" activeClassName=\"menu_wrapper__active\" to={`/bio/${props.id}/${props.item.id}`} title={props.item.title}>{props.children}</NavLink>\n        }\n    },\n    [EType.GALLERY]: {\n        className: 'menu_logo__gallery',\n        ItemWidget: (props) => {\n            return <NavLink className=\"menu_wrapper link\" activeClassName=\"menu_wrapper__active\" to={`/gallery/${props.id}/${props.item.id}`} title={props.item.title}>{props.children}</NavLink>\n        },\n        descriptionConverter: (d) => `${d} шт.`\n    },\n    [EType.MAP]: {\n        className: 'menu_logo__map',\n        ItemWidget: (props) => {\n            return <NavLink className=\"menu_wrapper link\" activeClassName=\"menu_wrapper__active\" to={`/map/${props.id}/${props.item.id}`} title={props.item.title}>{props.children}</NavLink>\n        }\n    },\n    [EType.PHONE]: {\n        className: 'menu_logo__phone',\n        ItemWidget: (props) => {\n            return <a className=\"menu_wrapper link\" href={`tel:${props.item.description}`} title={props.item.title}>{props.children}</a>\n        },\n        descriptionConverter: (d) => d.replace(/(\\d)(\\d\\d\\d)(\\d\\d\\d)(\\d\\d\\d\\d)/, '$1 ($2) $3 $4')\n    },\n    [EType.EMAIL]: {\n        className: 'menu_logo__email',\n        ItemWidget: (props) => {\n            return <a className=\"menu_wrapper link\" href={`mailto:${props.item.description}`} title={props.item.title}>{props.children}</a>\n        },\n    },\n    [EType.DATE]: {\n        className: 'menu_logo__date',\n        ItemWidget: (props) => {\n            return <a className=\"menu_wrapper link\" href=\"#none\" title={props.item.title}>{props.children}</a>\n        },\n    }\n}\n\nconst NavigationMenu = (props: IProps) => {\n    return (\n        <ul className=\"menu\">\n            {props.items.map(item => {\n                const { className, descriptionConverter, ItemWidget } = widgetHandlers[item.type];\n                const description = item.description && descriptionConverter ? descriptionConverter(item.description) : item.description;\n\n                return (\n                    <li key={item.id} className=\"menu_item\">\n                        <ItemWidget id={props.id} item={item}>\n                            <div className={`menu_logo ${className}`}></div>\n                            <div className=\"menu_item-name\">\n                                <div className=\"menu_item-name-title\">{item.title}</div>\n                                {description ?\n                                    (<div className=\"menu_item-name-descripton\" title={description}>{description}</div>)\n                                    : null}\n                            </div>\n                        </ItemWidget>\n                    </li>\n                );\n            })}\n        </ul>\n    );\n}\n\nexport default NavigationMenu;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport Avatar from '../avatar/Avatar';\nimport NavigationMenu from '../navigation/menu/NavigationMenu';\n\nimport { IItemMenu, EType } from '../../models/Models';\n\nimport './Navigation.css';\n\n\nconst items: IItemMenu[] = [\n  {\n    id: \"1\",\n    type: EType.BIO,\n    title: \"Биография\"\n  },\n  {\n    id: \"2\",\n    type: EType.GALLERY,\n    title: \"Фото\",\n    description: \"35\"\n  },\n  {\n    id: \"3\",\n    type: EType.MAP,\n    title: \"Дом в Ивакино\"\n  },\n  {\n    id: \"4\",\n    type: EType.PHONE,\n    title: \"Мобильный Sberbank\",\n    description: \"89165889892\"\n  },\n  {\n    id: \"5\",\n    type: EType.PHONE,\n    title: \"Рабочий\",\n    description: \"89168856699\"\n  },\n  {\n    id: \"6\",\n    type: EType.PHONE,\n    title: \"Мобильный МТС\",\n    description: \"89165364551\"\n  },\n  {\n    id: \"7\",\n    type: EType.EMAIL,\n    title: \"Личная\",\n    description: \"patr123456@yandex.ru\"\n  },\n  {\n    id: \"8\",\n    type: EType.DATE,\n    title: \"Дата свадьбы\",\n    description: \"02.09.2017\"\n  }\n]\n\nconst Navigation = () => {\n\n  return (\n    <nav className=\"nav\">\n\n      <div className=\"nav_tab\">\n        <div id=\"nav_toggle_id\" className=\"tab\" title=\"Скрыть\">\n          <div className=\"tab_text\">Семейное древо</div>\n        </div>\n      </div>\n\n      <div className=\"nav_wrapper\">\n        <div className=\"info\">\n          <NavLink\n            className=\"link\"\n            to=\"/\"\n            title=\"Моисеенков Владимир Ильич\"\n          >\n            <div className=\"info_logo\">\n              <Avatar\n                position=\"-63px -51px\"\n                url=\"/photo/001-volodya.png\"\n                size={261}\n              />\n            </div>\n            <div className=\"info_fio\">\n              <div className=\"info_lastname\">Моисеенков</div>\n              <div className=\"info_firstname\">Владимир Ильич</div>\n            </div>\n            <div className=\"info_life\">03.02.1937-04.07.2012</div>\n            <div className=\"info_age\">75 лет</div>\n          </NavLink>\n        </div>\n        <NavigationMenu id={1} items={items} />\n      </div>\n    </nav>\n  )\n}\n\nexport default Navigation;","import React from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown/with-html\";\n\nimport \"./BioPage.css\";\n\nimport { INavigationProps } from \"../../../models/Models\";\n\ninterface IBioPageRoute extends INavigationProps {\n\n}\n\nconst markdown = `\nThis block of Markdown contains <a href=\"https://en.wikipedia.org/wiki/HTML\">HTML</a>, and will require the <code>html-parser</code> \nAST plugin to be loaded, in addition to setting the <code class=\"prop\">escapeHtml</code> property to false.\n`\n\nexport function BioPage(prop: RouteComponentProps<IBioPageRoute>) {\n    return (\n        <div className=\"bio\">\n            <h2 className=\"bio_header\">Биография для пользователя {prop.match.params.userId}</h2>\n            <div className=\"bio_body\">\n                <ReactMarkdown\n                    source={markdown}\n                    escapeHtml={false}\n                />\n            </div>\n\n        </div>\n    );\n}\n\nexport default withRouter(BioPage)","import React, { useState, useCallback } from \"react\";\nimport PhotoGallery from \"react-photo-gallery\";\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\n\ninterface IProps {\n    photos: any[];\n}\n\nexport function Gallery(props: IProps) {\n    const [currentImage, setCurrentImage] = useState(0);\n    const [viewerIsOpen, setViewerIsOpen] = useState(false);\n\n    const openLightbox = useCallback((event, { photo, index }) => {\n        setCurrentImage(index);\n        setViewerIsOpen(true);\n    }, []);\n\n    const closeLightbox = () => {\n        setCurrentImage(0);\n        setViewerIsOpen(false);\n    };\n\n    return (\n        <div className=\"gallery\">\n            <PhotoGallery photos={props.photos} onClick={openLightbox} />\n            <ModalGateway>\n                {viewerIsOpen ? (\n                    <Modal onClose={closeLightbox}>\n                        <Carousel\n                            currentIndex={currentImage}\n                            views={props.photos.map((x: any) => ({\n                                ...x,\n                                srcset: x.srcSet,\n                                caption: x.title,\n                            }))}\n                        />\n                    </Modal>\n                ) : null}\n            </ModalGateway>\n        </div>);\n}\n\nexport default Gallery;","import React, { useState } from \"react\";\nimport jsonp from \"jsonp\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\n\nimport Gallery from \"../../gallery/Gallery\";\nimport { INavigationProps } from \"../../../models/Models\";\n\nimport \"./GalleryPage.css\";\n\ninterface IGalleryPageRoute extends INavigationProps {\n\n}\n\nfunction loadPhotos(cb: (photos: any) => void) {\n    const urlParams: { [name: string]: string } = {\n        api_key: '455b5e2fa6b951f9b9ab58a86d5e1f8a',\n        photoset_id: '72157708141247864',\n        user_id: '146659101@N08',\n        format: 'json',\n        per_page: '15',\n        extras: 'url_m,url_c,url_l,url_h,url_o',\n    };\n\n    let url = 'https://api.flickr.com/services/rest/?method=flickr.photosets.getPhotos';\n    url = Object.keys(urlParams).reduce((acc, item) => {\n        return acc + '&' + item + '=' + urlParams[item];\n    }, url);\n\n    jsonp(url, { name: 'jsonFlickrApi' }, (err: any, data: any) => {\n        let photos = data.photoset.photo.map((item: any) => {\n            return {\n                src: item.url_l,\n                width: parseInt(item.width_o),\n                height: parseInt(item.height_o),\n                title: item.title,\n                alt: item.title,\n                key: item.id,\n                srcSet: [\n                    `${item.url_m} ${item.width_m}w`,\n                    `${item.url_c} ${item.width_c}w`,\n                    `${item.url_l} ${item.width_l}w`,\n                    `${item.url_h} ${item.width_h}w`,\n                ],\n                sizes: '(min-width: 240px) 25vw, (min-width: 512px) 15vw, 100vw',\n            };\n        });\n\n        cb(photos);\n    })\n\n}\n\nexport function GalleryPage(prop: RouteComponentProps<IGalleryPageRoute>) {\n    const [photos, setPhotos] = useState([]);\n\n    loadPhotos(photos => setPhotos(photos))\n\n    return (\n        <div className=\"gallery\">\n            <h2 className=\"gallery_header\">Галерея {prop.match.params.userId} с кодом {prop.match.params.id}</h2>\n            <div className=\"gallery_body\">\n                <Gallery photos={photos} />\n            </div>\n        </div>);\n}\n\nexport default withRouter(GalleryPage);","import React from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\n\nimport { INavigationProps } from \"../../../models/Models\";\n\nimport \"./MapPage.css\";\n\ninterface IMapPageRoute extends INavigationProps {\n\n}\n\nexport function MapPage(prop: RouteComponentProps<IMapPageRoute>) {\n    return (\n        <div className=\"map\">\n        <h2 className=\"map_header\">Карта для {prop.match.params.userId} с кодом {prop.match.params.id}</h2>\n        <div className=\"map_body\">\n        </div>\n    </div>\n    );\n}\n\nexport default withRouter(MapPage)","import React from \"react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\n\nimport { INavigationProps } from \"../../../models/Models\";\n\nimport \"./TreePage.css\";\n\ninterface ITreePageRoute {\n\n}\n\ninterface IProps extends RouteComponentProps<ITreePageRoute> {\n\n}\n\nexport function TreePage(prop: IProps) {\n    return (\n        <div className=\"tree\">\n        <h2 className=\"tree_header\">Семейное древо</h2>\n        <div className=\"tree_body\">\n        </div>\n    </div>\n    );\n}\n\nexport default withRouter(TreePage)","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport function NoMatchPage() {\n    const location = useLocation();\n    return (\n        <h2>Страница не найдена {location.pathname}</h2>\n    );\n}\n\nexport default NoMatchPage","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport BioPage from \"./bio/BioPage\";\nimport GalleryPage from \"./gallery/GalleryPage\";\nimport MapPage from \"./map/MapPage\";\nimport TreePage from \"./tree/TreePage\";\nimport NoMatchPage from \"./nomatch/NoMatchPage\";\n\nexport default function Page() {\n    return (\n        <main className=\"main\">\n            <Switch>\n                <Route exact path=\"/\">\n                    <TreePage />\n                </Route>\n                <Route path=\"/bio/:userId/:id\">\n                    <BioPage />\n                </Route>\n                <Route path=\"/gallery/:userId/:id\">\n                    <GalleryPage />\n                </Route>\n                <Route path=\"/map/:userId/:id\">\n                    <MapPage />\n                </Route>\n                <Route path=\"*\">\n                    <NoMatchPage />\n                </Route>\n            </Switch>\n        </main>\n    );\n}","import React from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport './App.css';\n\nimport Navigation from './components/navigation/Navigation';\nimport Page from './components/pages/Page';\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"layout\">\n        <Page/>\n        <Navigation />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}